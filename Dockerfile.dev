# Development Dockerfile with hot reload support
# Based on the production Dockerfile but with development tools

FROM python:3.12-slim

# Install all dependencies (no multi-stage for dev)
RUN apt-get update && apt-get install -y \
    # Build essentials
    build-essential gcc g++ \
    # Tesseract OCR and languages
    tesseract-ocr tesseract-ocr-deu tesseract-ocr-eng \
    # PDF utilities
    poppler-utils \
    # Image processing
    libglib2.0-0 libsm6 libxext6 libxrender-dev libgomp1 \
    # File type detection
    libmagic1 libmagic-dev \
    # Health check
    curl \
    # Process management
    supervisor \
    # Development tools
    vim nano htop \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python packages
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir chromadb watchdog

# Copy application code
COPY app/ ./app/
COPY frontend/ ./frontend/
COPY cli.py ./
COPY docker-entrypoint.sh ./
COPY docker-entrypoint-aio.sh ./
COPY supervisord.conf /etc/supervisor/conf.d/

# Create necessary directories
RUN mkdir -p data data/logs data/staging data/storage data/uploads backups chroma /var/log/supervisor && \
    chmod +x docker-entrypoint.sh docker-entrypoint-aio.sh

# Development environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONPATH=/app \
    ENVIRONMENT=development \
    LOG_LEVEL=DEBUG \
    DATABASE_URL=sqlite:///./data/documents.db \
    SECRET_KEY=dev-secret-key-only-for-development \
    TESSERACT_PATH=/usr/bin/tesseract \
    POPPLER_PATH=/usr/bin

# Expose ports
EXPOSE 8000

# Use the same entrypoint as production
ENTRYPOINT ["/app/docker-entrypoint.sh"]